@model Hypnosis.Web.Models.ProjectDetailsModel
<style>
    .display_none {
        display: none !important;
    }

    .text-box {
        width: 600px !important;
    }

    #pp tr > *:nth-child(1) {
        display: none;
    }
</style>
<div class="form-inline form-inline-margins">



    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label label-title" })
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control form-control-long" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
       
        @Html.HiddenFor(model => model.ID)
    </div>

</div>

@*<div class="form-inline form-inline-margins">
        <div class="form-group">
            <label>פרטי קשר</label>
        </div>
    </div>*@
<div class="form-inline form-inline-margins display_none">

    @*<div class="form-group">
            @Html.LabelFor(model => model.MainPhone, htmlAttributes: new { @class = "control-label label-normal" })
            @Html.EditorFor(model => model.MainPhone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MainPhone, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phones, htmlAttributes: new { @class = "control-label label-normal" })
            @Html.EditorFor(model => model.Phones, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phones, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label label-normal" })
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.InMailingList, htmlAttributes: new { @class = "control-labe label-normal" })
            @Html.CheckBoxFor(model => model.InMailingList, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Person_Senior, "", new { @class = "text-danger" })
        </div>*@
</div>
@*<div class="form-inline form-inline-margins">
        <div class="form-group">
            <label>כתובת לדיוור </label>
        </div>
    </div>*@
@*<div class="form-inline form-inline-margins">

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label label-normal" })
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address_Comments, htmlAttributes: new { @class = "control-label label-normal"} )
            @Html.EditorFor(model => model.Address_Comments, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address_Comments, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label label-normal" })
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label label-normal" })
            @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
        </div>

    </div>*@

<div class="form-inline form-inline-margins">
    <div>
        @Html.LabelFor(model => model.Project_Description, htmlAttributes: new { @class = "control-label label-bold" })
        @Html.TextAreaFor(model => model.Project_Description, new { @class = "text-area-big", @rows = 50 })
    </div>
</div>

<script lang="javascript">

    tinymce.init({
        menubar: false,
        width: "100%",
        mode: "textareas",
        directionality: 'rtl',
        encoding: "xml",
        setup: function (editor) {
            editor.on("SaveContent", function (i) {
                i.content = i.content.replace(/&#39/g, "&apos");
            });
        },
        plugins: [
            "advlist directionality autolink lists link image charmap print preview anchor",
            "searchreplace visualblocks code fullscreen",
            "insertdatetime media table contextmenu paste"
        ],
        toolbar: "insertfile undo redo | styleselect | bold italic | fontsizeselect |  fontselect | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image"
    });

</script>


@*<script type="text/javascript">
        $(function () {
            $("#tblSortable").sortable();
            $("#tblLocations").dataTable();


            //{
            //        items: 'tr:not(tr:first-child)',
            //        cursor: 'pointer',
            //        axis: 'y',
            //        dropOnEmpty: false,
            //        start: function (e, ui) {
            //            ui.item.addClass("selected");
            //        },
            //        stop: function (e, ui) {
            //            ui.item.removeClass("selected");
            //        },
            //        receive: function (e, ui) {
            //            $(this).find("tbody").append(ui.item);
            //        }
            //    });
            //});
        });
    </script>

        <table id="tblLocations" class="table table-striped table-bordered dataTable no-footer" style="overflow:auto; width:70%">
            <tbody id="tblSortable">
            <tr>
                <th>ID</th>
                <th>Location</th>
                <th>Preference</th>
            </tr>
           <tr>
                <td>1</td>
           </tr>
            <tr>
                <td>2</td>
            </tr>
            <tr>
                <td>3</td>
            </tr>
           </tbody>
        </table>*@
@*<br />
    <input type="submit" value="Update Preference" />*@

<table id="pp" class="table table-striped table-bordered dataTable no-footer" style="overflow:auto"></table>
<script>
            var oTable = $('#pp');
           
            oTable.dataTable({
                stateSave: true,
                "bSortable": false,
                "sAjaxSource": "@Url.Action("DataByProjectCard", "PersonsProjects")",

                "fnServerParams": function (aoData) {
                    aoData.push({ "name": "Project_ID", "value": $("#details_ID").val() });
                console.log("data=");
                console.log(aoData);
                },
                "fnDrawCallback": function (oSettings) {
                if (oSettings.aoData.length == 0) {
                oTable.closest('.dataTables_wrapper').find('.dataTables_footer, .dataTables_table_wrapper').hide();
                }
                else {
                oTable.closest('.dataTables_wrapper').find('.dataTables_footer, .dataTables_table_wrapper').show();
                }


                },

               

                "aoColumns": [


                    {
                        "mData": "ID",
                        "sTitle": "ID",
                        "bVisible": false,
                        "visible": false,
                        "sWidth": "0",
                        "mRender": function (a, b, c) {
                            return '<input type="hidden" id="dt_id" class="id_required"  value="' + c.ID + '">';
                        }
                    },

                   

                {
                "mData": "ProjectName",
                "sTitle": "מחקר",


                },
                {
                "mData": "PersonName",
                "sTitle": "חוקר",


                    },

                    {
                        "mData": "PersonOrder",
                        "sTitle": "מספר",


                    },

                 {

                     "sWidth": "10%",
                     "mData": null, "sTitle": "",
                     "bSortable": false,
                     "mRender": function (a, b, c) {
                         var html = '<a href="#up" class="btn" onclick=deleteRow(' + c.ID + ') title="מחק"><i class="fa fa-times"></i></a>';
                        // html += "<a class='edit fa fa-pencil-square-o' title='ערוך'></a>";
                         return html;
                     },
                     //"mRenderEdit": function (a, b, c) {
                     //    var html = "<a class='update fa fa-check' title='שמור'></a>"
                     //    html += " <a class='cancel fa fa-undo' title='בטל'></a>";
                     //    return html;
                     //}
                 },

                ],
                                      

                "fnServerData": function (sSource, aoData, fnCallback) {
                    console.log("ao");
                    console.log(aoData);
                    $.ajax({
                        "dataType": 'json',
                        "type": "POST",
                        "url": sSource,
                        "data": aoData,
                        "success": fnCallback
                    });
                },
            });
            oTable.sortable({
                //items: 'tr:not(tr:first-child)',
                items: 'tr:not(th)',
                cursor: 'pointer',
                axis: 'y',
                dropOnEmpty: false,
                start: function (e, ui) {
                    ui.item.addClass("selected");
                },
                stop: function (e, ui) {
                    ui.item.removeClass("selected");
                },
                receive: function (e, ui) {
                    $(this).find("tbody").append(ui.item);
                }
            });
    
    oTable.closest('.dataTables_wrapper').find('.dataTables_table_wrapper');
    //console.log("rows=");
    //console.log(oTable.rows());
   // $('#pp td:nth-child(0).hide());
  //  $('#pp td:nth-child(1)').hide();
  //  $('#pp th:nth-child(1)').hide();
   
        function deleteRow(id) {
            if (confirm("האם אתה בטוח שברצונך למחוק רשומה זו?")) {
                $.ajax({
                    contentType: "application/json; charset=utf-8",
                    type: "GET",
                    dataType: "json",
                    url: '@Url.Action("Delete", "PersonsProjects")',
                    data: { "Id": id }
                }).success(function (data) {
                    if (!data.result) {
                        alert("הייתה בעיה במחיקה");
                    }
                    else {
                        // alert('deleted');
                        var oTable = $('#pp').dataTable();
                        console.log('redraw');
                        oTable.fnDraw(false);
                    }
                }).error(function () { })
                            .complete(function () { });
            }
        }

</script>

<a name="bottom"></a>
<div class="panel-body">
    <p><b>הוספת סוג אירוע</b></p>
    <table id="eventSubTypesAdd" class="table table-striped table-bordered dataTable no-footer" style="overflow:auto; width:70%">
        <tbody>
            <tr>
                <td class="line_title" style="width:20%">
                    <label for="eventSubTypeName">שם החוקר</label>
                </td>
                <td class="line">
                    <input id="dt_person" type="text" />
                </td>
                @*<td class="line">
                        <input id="dt_name" type="text" />
                    </td>
                    <td class="line_title" style="width:25%">
                        <label for="eventType">שם סוג אירוע</label>
                    </td>
                    <td class="line">
                        <input id="dt_type" type="text" />
                    </td>
                    <td class="line_title" style="width:25%">
                        <label for="order">סדר הצגה בתמצית </label>
                    </td>
                    <td class="line">
                        <input id="dt_order" type="text" />
                    </td>*@
                <td class="line_title">
                    <a href="#bottom" title="שמור" id="save"><i class="fa fa-check"></i></a>
                </td>
                <td class="line_title">
                    <a href="#bottom" title="בטל" id="cancel"><i class="fa fa-undo"></i></a>
                </td>
            </tr>
        </tbody>
    </table>
</div>
<input type="button" value="Update Order" onclick="saveMe()" />

<script>
    function saveMe() {
        var data="";

            $('.id_required').each(function (i) {
                data+=$(this).val()+",";
            });

        console.log("data=");
        console.log(data);

        $.ajax({
                    contentType: "application/json; charset=utf-8",
                    type: "GET",
                    dataType: "json",
            url: '@Url.Action("SaveOrder", "PersonsProjects")',
           
                 data: { "Id": data },
                 projectId: $("#details_ID").val()
                }).success(function (data) {
                    if (!data.result) {
                        alert("הייתה בעיה במחיקה");
                    }
                    else {
                        // alert('deleted');
                        var oTable = $('#pp').dataTable();
                        console.log('redraw');
                        oTable.clear();
                        oTable.fnDraw(true);
                    }
                }).error(function () { })
                            .complete(function () { });



    }

    $(function () {
        var typeSelect = $('#dt_person').select2({
            width: 200,
            placeholder: "הכל",
            allowClear: true,
            initSelection: function (element, callback) {
                $.ajax({
                    url: '@Url.Content("~/JsonResults/PersonInitJson")',
                    type: "GET",
                    data: { value: $(element).val() },
                    dataType: "json"
                }).done(function (data) {
                    if (data && data.length == 1) {
                        console.log("OK")
                        callback(data[0]);
                    }
                });
            },
            ajax: {
                url: '@Url.Content("~/JsonResults/GetPersonsJson")',
                dataType: "json",
                data: function (term, page) {
                    return {
                        q: term, // search term,
                        project_id: $("#details_ID").val(),
                        page: page,
                        page_limit: 10,
                        val: this.val()
                    };
                },
                results: function (data, page) {
                    return {
                        results: $.map(data.results, function (a) { return { id: a.id, text: a.text } })
                    };
                }
            }
        });
    });


            $("#save").on('click', function () {
            //alert('begin');
            if (!validate()) {
                alert("חובה למלא את כל השדות");
                return;
            }

            var dataParams = [];
                dataParams.push({ "name": "Project_ID", "value": $("#details_ID").val() });
                dataParams.push({ "name": "Person_ID", "value": $('#dt_person').select2('val') });
                dataParams.push({ "name": "PersonOrder", "value": 0 });
                dataParams.push({ "name": "isUpdate", "value": false });

            $.ajax({
                contentType: "application/json; charset=utf-8",
                type: "GET",
                dataType: "json",
                url: '@Url.Action("ChangeData","PersonsProjects")',
                data: dataParams
            }).success(function (data) {
                //alert(data.error);
                    console.log(data);
                    if (!data.result && data.error != "") {
                        alert(data.error);
                    }
                    else if (!data.result) {
                        alert("הייתה בעיה בשמירת הנתונים");
                    }
                    else {
                        clearNewRow();
                        oTable.fnDraw(false);
                    }
                }).error(function () { })
                            .complete(function () { });
            });
            $("#cancel").on('click', function () {
                clearNewRow();
            });


    function clearNewRow() {

        $("#dt_person").select2('val', '');

    }

    function validate() {

        if ($('#dt_person').select2('val') == "") {
            return false;
        }
        return true;
    };

</script>