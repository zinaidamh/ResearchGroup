@model Hypnosis.Web.Models.EventTypesViewModel
@{
    ViewBag.Title = "סוגי אירועים";
}

<h2 class="page-header">@ViewBag.Title</h2>

<div class="panel panel-default ">
    <div class="panel-heading">
        <a href="#bottom"><i class="fa fa-plus"></i>סוג אירוע </a>
    </div>
    <div class="panel-body">
        <div id="Filter" class="form-inline">
            <div class="form-group">
                @Html.LabelFor(f => f.ID)
                @Html.EditorFor(f => f.ID)
            </div>
        </div>
        <br />
        <a name="up"></a>
        <table id="eventTypes"  class="table table-striped table-bordered dataTable no-footer" style="overflow:auto; width:70%"></table>
    </div>
    @*<div class="panel-body">
        <button type="button" class="btn btn-primary" id="exportBtn">יצוא </button>
    </div>*@
    <a name="bottom"></a>
    <div class="panel-body">
        <p><b>הוספת סוג אירוע</b></p>
        <table id="eventTypesAdd" class="table table-striped table-bordered dataTable no-footer" style="overflow:auto; width:70%">
            <tbody>
                <tr>
                    <td class="line_title" style="width:20%">
                        <label for="eventTypeName">שם סוג אירוע</label>
                    </td>
                    <td class="line">
                        <input id="dt_name" type="text" />
                    </td>
                    <td class="line_title" style="width:25%">
                        <label for="eventTypeCategory">קטגוריית סוג אירוע</label>
                    </td>
                    <td class="line" >
                        <input id="dt_category" type="text" />
                    </td>
                    <td class="line_title">
                        <a href="#bottom" title="שמור" id="save"><i class="fa fa-check"></i></a>
                    </td>
                    <td class="line_title">
                        <a href="#bottom" title="בטל" id="cancel"><i class="fa fa-undo"></i></a>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

@section Scripts{

    <script>
    $(function () {
        var typeSelect = $('#@Html.FieldIdFor(f => f.ID)').select2({
            width: 200,
            placeholder: "הכל",
            allowClear: true,
            initSelection: function (element, callback) {
                $.ajax({
                    url: '@Url.Content("~/JsonResults/EventTypesInitJson")',
                    type: "GET",
                    data: { value: $(element).val() },
                    dataType: "json"
                }).done(function (data) {
                    if (data && data.length == 1) {
                        callback(data[0]);
                    }
                });
            },
            ajax: {
                url: '@Url.Content("~/JsonResults/GetEventTypesJson")',
                dataType: "json",
                data: function (term, page) {
                    return {
                        q: term, // search term
                        page: page,
                        page_limit: 10,
                        val: this.val()
                    };
                },
                results: function (data, page) {
                    return {
                        results: $.map(data.results, function (a) { return { id: a.id, text: a.text } })
                    };
                }
            }
        });


      


        function dt_category_select() {
            $('#dt_category').select2({
                width: 200,
                placeholder: "לא בוצעה בחירה",
                initSelection: function (element, callback) {
                    $.ajax({
                        url: '@Url.Content("~/JsonResults/EventTypeCategoriesInitJson")',
                        type: "GET",
                        data: { value: $(element).val() },
                        dataType: "json"
                    }).done(function (data) {
                        if (data && data.length == 1) {
                            callback(data[0]);
                        }
                    });
                },
                ajax: {
                    url: '@Url.Content("~/JsonResults/GetEventTypeCategoriesJson")',
                    dataType: "json",
                    data: function (term, page) {
                        return {
                            q: term, // search term
                            page: page,
                            page_limit: 10,
                            val: this.val()
                        };
                    },
                    results: function (data, page) {
                        return {
                            results: $.map(data.results, function (a) { return { id: a.id, text: a.text } })
                        };
                    }
                }
            });
        }

        dt_category_select();

        var oTable = $('#eventTypes');
        oTable.dataTable({
            stateSave: true,
            "aaSorting": [[0, 'asc']],
            "bAutoWidth": false, // Disable the auto width calculation 
          
            "sAjaxSource": "@Url.Action("IndexData")",
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "filterId", "value": typeSelect.select2('val') });
            },
            "fnDrawCallback": function (oSettings) {
                if (oSettings.aoData.length == 0) {
                    oTable.closest('.dataTables_wrapper').find('.dataTables_footer, .dataTables_table_wrapper').hide();
                }
                else {
                    oTable.closest('.dataTables_wrapper').find('.dataTables_footer, .dataTables_table_wrapper').show();
                }
            },
            "aoColumns": [
                //{
                //    "sWidth": "10%",
                //    "mData": null, "sTitle": '<input type="checkbox" onClick="selectAll()" id="mainSelector" />',
                //    "bSortable": false,
                //    "mRender": function (a, b, c) {
                //        if (b === 'display') {
                //            return '<input type="checkbox" name="typesToChange" class="typesSelector" value="' + c.ID + '" />';
                //        }
                //        return a;
                //    }
                //},
                
                {
                    "sWidth": "50%",
                    "mData": "Type_Name",
                    "sTitle": "שם סוג אירוע",
                    "mRenderEdit": function (a, b, c) {
                        return '<input id="dt_name" class="required"  value="'+ c.Type_Name+'">';;
                        }
                },
                {
                    "sWidth": "30%",
                    "mData": "Type_Category_Name",
                    "sTitle": "קטגוריית סוג אירוע",
                    "mRenderEdit": function (a, b, c) {
                        return '<input id="dt_category" class="required"  value="'+ c.Type_Category+'">';;
                    }
                },
                {

                    "sWidth": "10%",
                    "mData": null, "sTitle": "",
                    "bSortable": false,
                    "mRender": function (a, b, c) {
                        var html = '<a href="#up" class="btn" onclick=deleteType(' + c.ID + ') title="מחק"><i class="fa fa-times"></i></a>';
                        html += "<a class='edit fa fa-pencil-square-o' title='ערוך'></a>";
                        return html;
                    },
                    "mRenderEdit": function (a, b, c) {
                        var html = "<a class='update fa fa-check' title='שמור'></a>"
                        html += " <a class='cancel fa fa-undo' title='בטל'></a>";
                        return html;
                    }
                },
            ]
        });


        $('.dataTables_filter').addClass('pull-right');
        $('.dataTables_paginate').addClass('pull-right');

        oTable.on('click', '.edit', function () {
            var $tr = $(this).closest('tr');
            var data = oTable.fnGetData($tr.get(0));
            console.log(data);
            var settings = oTable.fnSettings();
            var columns = settings.aoColumns;
            console.log(columns);
            var $tds = $tr.find('td');
            $tds.each(function (i, td) {
                var col = columns[i];
                console.log(col);
                if (col.mRenderEdit) {
                    var $td = $(td);
                    $td.html(col.mRenderEdit(null, null, data));
                }
            });
            dt_category_select();
        });

        oTable.on('click', '.cancel', function () {
            oTable.fnDraw(false);
        });

        typeSelect.change(function () {
           
            //console.log(oTable);
            oTable.fnDraw(false);
        });

        oTable.on('click', '.update', function () {
            if (!validate()) {
                alert("חובה למלא את כל השדות");
                return;
            }
            var settings = oTable.fnSettings();
            var $tr = $(this).closest('tr');
            var data = oTable.fnGetData($tr.get(0));
            console.log('data');
            console.log(data);
            var newdata = $.extend({}, data);
            var columns = settings.aoColumns;

            var dataParams = [];
            dataParams.push({ "name": "Id", "value": data.ID });
            dataParams.push({ "name": "isUpdate", "value": true });
            console.log(dataParams);
            $tr.find('td').each(function (i, td) {
                var col = columns[i];
                if (col.mData) {
                    switch (col.mData) {
                        case 'Type_Name': newdata[col.mData] = $("#dt_name").val();
                            dataParams.push({ "name": "Type_Name", "value": $("#dt_name").val() });
                            break;
                        case 'Type_Category_Name': newdata[col.mData] = $("#dt_category").val();
                            dataParams.push({ "name": "Type_Category", "value": $("#dt_category").select2('val')  });
                            break;
                    }
                }
            });
            console.log('all params');
            console.log(dataParams);
            $.ajax({
                contentType: "application/json; charset=utf-8",
                type: "GET",
                dataType: "json",
                url: '@Url.Action("ChangeData")',
                data: dataParams
            }).done(function (data) {
                oTable.fnUpdate(newdata, $tr.get(0));
                if (!data.result && data.error != "") {
                    alert(data.error);
                }
                else if (!data.result) {
                    alert("הייתה בעיה בשמירת הנתונים");
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
                console.log(jqXHR);
                alert("הייתה בעיה בשמירת הנתונים");
            });
        });

      

        $('#eventTypes tbody').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            }
            else {
                oTable.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
        });

        $("#save").on('click', function () {
            //alert('begin');
            if (!validate()) {
                alert("חובה למלא את כל השדות");
                return;
            }

            var dataParams = [];
            dataParams.push({ "name": "Type_Name", "value": $("#dt_name").val()});
            dataParams.push({ "name": "Type_Category", "value": $('#dt_category').select2('val')  });
            dataParams.push({ "name": "isUpdate", "value": false });

            $.ajax({
                contentType: "application/json; charset=utf-8",
                type: "GET",
                dataType: "json",
                url: '@Url.Action("ChangeData")',
                    data: dataParams
                }).success(function (data) {
                    if (!data.result && data.error != "") {
                        alert(data.error);
                    }
                    else if (!data.result) {
                        alert("הייתה בעיה בשמירת הנתונים");
                    }
                    else {
                        clearNewRow();
                        oTable.fnDraw(false);
                    }
                }).error(function () { })
                            .complete(function () { });
            });
        $("#cancel").on('click', function () {
            
            clearNewRow();
            
            });

        function clearNewRow()
        {
            $("#dt_name").val('');
            $("#dt_category").select2('val', '');
        }


            function validate() {
                if ($('#typeName').val() == "") {
                    return false;
                }
                if ($('#typeCategory').val() == "") {
                    return false;
                }
                return true;
            };

            @*$('#exportBtn').click(function () {
                var location = '@Url.Action("Export", "Cities")?';
                var filterValues = [];
                filterValues.push({ "name": "filterCityId", "value": typeSelect.select2('val') });
                location += $.param(filterValues);
                window.location = location;
            });*@
        });

        function deleteType(id) {
            if (confirm("האם אתה בטוח שברצונך למחוק רשומה זו?")) {
                $.ajax({
                    contentType: "application/json; charset=utf-8",
                    type: "GET",
                    dataType: "json",
                    url: '@Url.Action("Delete")',
                data: { "Id": id }
            }).success(function (data) {
                if (!data.result) {
                    alert("הייתה בעיה במחיקה");
                }
                else {
                   // alert('deleted');
                    var oTable = $('#eventTypes').dataTable();
                    console.log('redraw');
                    oTable.fnDraw(false);
                }
            }).error(function () { })
                            .complete(function () { });
        }
    }

    function selectAll() {
        if ($("#mainSelector").prop('checked')) {
            $(".typesSelector").prop('checked', true);
        }
        else {
            $(".typesSelector").prop('checked', false);
        }
    }
    </script>
}