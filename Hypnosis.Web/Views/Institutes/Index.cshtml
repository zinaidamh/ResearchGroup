@model Hypnosis.Web.Models.EventsFilterViewModel_ForList
@{
    ViewBag.Title = "רשימת מכונים";
}

<h2 class="page-header">@ViewBag.Title</h2>

<div class="panel panel-default ">
    <div class="panel-heading">
    </div>
    <div class="panel-body">
        <div id="institutionsFilter" class="form-inline">
            <div class="form-group">
                @Html.LabelFor(f => f.Type_ID)
                @Html.EditorFor(f => f.Type_ID)
            </div>
            <div class="form-group">
                @Html.LabelFor(f => f.SubType_ID)
                @Html.EditorFor(f => f.SubType_ID)
            </div>
            <div class="form-group">
                @Html.LabelFor(f => f.InMailingListOnly)
                @Html.CheckBoxFor(f => f.InMailingListOnly)
            </div>
        </div>
    </div>
    <br />
    <table id="Institutes" class="table table-striped table-bordered dataTable no-footer" style="overflow:auto"></table>
</div>
<div class="panel-body">
    <button type="button" class="btn btn-primary" id="createNew">הוספת מכונים</button>
    <button type="button" class="btn btn-primary" id="exportBtn">יצוא מכונים</button>
</div>

@section Scripts{
    <script>
    $(function () {


        var selectType = $('#@Html.FieldIdFor(f => f.Type_ID)').select2({
            width: 200,
            placeholder: "הכל",
            allowClear: true,
            initSelection: function (element, callback) {
                $.ajax({
                    url: '@Url.Content("~/JsonResults/EventTypesInitJson_Institute")',
                    type: "GET",
                    data: { value: $(element).val() },
                    dataType: "json"
                }).done(function (data) {
                    if (data && data.length == 1) {
                        callback(data[0]);
                    }
                });
            },
            ajax: {
                url: '@Url.Content("~/JsonResults/GetEventTypesJson_Institute")',
                dataType: "json",
                data: function (term, page) {
                    return {
                        q: term, // search term
                        page: page,
                        page_limit: 10,
                        val: this.val()
                    };
                },
                results: function (data, page) {
                    return {
                        results: $.map(data.results, function (a) { return { id: a.id, text: a.text } })
                    };
                }
            }
        });


        var selectSubType = $('#@Html.FieldIdFor(f => f.SubType_ID)').select2({
            width: 200,
            placeholder: "הכל",
            allowClear: true,
            initSelection: function (element, callback) {
                $.ajax({
                    url: '@Url.Content("~/JsonResults/EventSubTypesInitJson_Institute")',
                    type: "GET",
                    data: { value: $(element).val() },
                    dataType: "json"
                }).done(function (data) {
                    if (data && data.length == 1) {
                        callback(data[0]);
                    }
                });
            },
            ajax: {
                url: '@Url.Content("~/JsonResults/GetEventSubTypesJson_Institute")',
                dataType: "json",
                data: function (term, page) {
                    return {
                        typeId: selectType.select2('val'),
                        q: term, // search term
                        page: page,
                        page_limit: 10,
                        val: this.val()
                    };
                },
                results: function (data, page) {
                    return {
                        results: $.map(data.results, function (a) { return { id: a.id, text: a.text } })
                    };
                }
            }
        });






        var chkInMailingListOnly = $('#@Html.FieldIdFor(f => f.InMailingListOnly)');


        var oTable = $('#Institutes');
        oTable.dataTable({
            stateSave: true,
            "aaSorting": [[0, 'asc']],
            "sAjaxSource": "@Url.Action("IndexData")",

            "fnServerParams": function (aoData) {
                aoData.push({ "name": "Type_ID", "value": selectType.select2('val') });
                aoData.push({ "name": "SubType_ID", "value": selectSubType.select2('val') });
                aoData.push({ "name": "InMailingListOnly", "value": chkInMailingListOnly.is(':checked') });
                console.log(aoData);
            },
            "fnDrawCallback": function (oSettings) {
                if (oSettings.aoData.length == 0) {
                    oTable.closest('.dataTables_wrapper').find('.dataTables_footer, .dataTables_table_wrapper').hide();
                }
                else {
                    oTable.closest('.dataTables_wrapper').find('.dataTables_footer, .dataTables_table_wrapper').show();
                }


            },

            "aoColumns": [
                //{
                //    "mData": null, "sTitle": '<input type="checkbox" onClick="selectAll()" id="mainSelector" />',
                //    "bSortable": false,
                //    "mRender": function (a, b, c) {
                //        if (b === 'display') {
                //            return '<input type="checkbox" name="ToChange" class="Selector" value="' + c.ID + '" />';
                //        }
                //        return a;
                //    }
                //},
                //{
                //    "mData": null, "sTitle": "",
                //    "bSortable": false,
                //    "mRender": function (a, b, c) {
                //        return '<a href="#" class="btn" onclick="confirmDelete(' + c.ID + ')" ><i class="fa fa-times"></i></a>';

                //    }
                //},

//last event

               {
                   "mData": "Name",
                   "sTitle": "שם המכון",
                   "bSortable": true,
                   "mRender": function (a, b, c) {
                    
                         return '<a href="@Url.Action("Edit", "Institutes")?Id=' + c.ID + '&Type_ID=' + selectType.select2('val') + '&SubType_id=' + selectSubType.select2('val') + '&InMailingListOnly=' + chkInMailingListOnly.is(':checked') + '" class="btn">'+c.Name+'</i></a>';
         }
                   },

                   

                    {
                      "mData": "FirstDate",
                      "sTitle": "תאריך ארוע אחרון",
                      "mRender": function (a) { return mRenderDate(a); }
                    },

                     {
                         "mData": "Type_Name",
                         "sTitle": "סוג ארוע אחרון"
                     },
                    {
                        "mData": "SubType_Name",
                        "sTitle": "תת סוג ארוע אחרון"
                    },
                    {
                        "mData": "Description",
                        "sTitle": "תאור ארוע אחרון"
                    },

  //last event essense
                     {
                         "mData": "FirstDate_Essense",
                         "sTitle": "תאריך ארוע אחרון בתמצית",
                         "mRender": function (a) { return mRenderDate(a); }
                     },
                      {
                          "mData": "Type_Name_Essense",
                          "sTitle": "סוג ארוע אחרון בתמצית"
                      },

                    {
                        "mData": "SubType_Name_Essense",
                        "sTitle": "תת סוג ארוע אחרון בתמצית"
                    },
                    {
                        "mData": "Description_Essense",
                        "sTitle": "תאור ארוע אחרון בתמצית"
                    },
  //contacts

                    {
                        "mData": "MainPhone",
                        "sTitle": "טלפון ראשי"
                    },
                    {
                        "mData": "Phones",
                        "sTitle": "טלפונים נוספים"
                    },

                    {
                        "mData": "Email",
                        "sTitle": 'דוא"ל'
                    },
                    {
                        "mData": "City",
                        "sTitle": "ישוב"
                    },

                    {
                        "mData": "InMailingListString",
                        "sTitle": "ברשימת תפוצה ?"
                    },



    //address, comments

                {
                    "mData": "Institute_Comments",
                    "sTitle": "הערות אדם",
                    'fnCreatedCell': function (nTd, sData, oData, iRow, iCol) {

                        if (oData.Institute_Comments != "null")
                        nTd.title = oData.Institute_Comments;
                    },
                    "mRender": function (a, b, c) {
                        if (a) {
                            var text = a.substring(0, 100);
                            return $('<textarea />').html(text).text();
                        }

                        return "";
                    }



                },


                {
                      "mData": "Address",
                      "sTitle": "רחוב ומספר",
                },
                 {
                     "mData": "City",
                     "sTitle": "ישוב",
                 },

                  {
                      "mData": "ZipCode",
                      "sTitle": "ימיקןד",
                  },

                   {
                       "mData": "Address_Comments",
                       "sTitle": "הערות כתובת",
                       "mRender": function (a, b, c) {
                           if (a) {
                               var text = a.substring(0, 100);
                               return $('<textarea />').html(text).text();
                           }
                           return "";
                       },
                       'fnCreatedCell': function (nTd, sData, oData, iRow, iCol) {

                           if (oData.Address_Comments != "null")
                           nTd.title = oData.Address_Comments;
                       }
                   },

                ],
                "fnServerData": function (sSource, aoData, fnCallback) {
                    console.log("ao");
                    console.log(aoData);
                    $.ajax( {
                        "dataType": 'json',
                        "type": "POST",
                        "url": sSource,
                        "data": aoData,
                        "success": fnCallback
                    } );
                },
            });

            oTable.closest('.dataTables_wrapper').find('.dataTables_table_wrapper');
            selectType.change(function () {
                oTable.fnDraw();
            });
            selectSubType.change(function () {
                oTable.fnDraw();
            });
            chkInMailingListOnly.change(function () {
                oTable.fnDraw();
            });

            $('#Institutes tbody').on('click', 'tr', function () {
                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                }
                else {
                    oTable.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');
                }
            });

            $('#exportBtn').click(function () {
                var location = '@Url.Action("Export", "Institutes")?';
            var filterValues = [];
            filterValues.push({ "name": "Type_ID", "value": selectType.select2('val') });
            filterValues.push({ "name": "SubType_ID", "value": selectSubType.select2('val') });
            filterValues.push({ "name": "InMailingListOnly", "value": chkInMailingListOnly.is(':checked') });
            location += $.param(filterValues);
            window.location = location;
        });

        $('#createNew').click(function () {
            var location = '@Url.Action("Create", "Institutes")?';
            var filterValues = [];
            filterValues.push({ "name": "Type_ID", "value": selectType.select2('val') });
            filterValues.push({ "name": "SubType_ID", "value": selectSubType.select2('val') });
            filterValues.push({ "name": "InMailingListOnly", "value": chkInMailingListOnly.is(':checked') });

            location += $.param(filterValues);
            window.location = location;
        });

        $(document).ready(function () {
            $dialog = $('<div>האם אתה בטוח שברצונך למחוק את הרשימה?<div>').dialog({
                autoOpen: false,
                buttons: [
                    {
                        text: "לא",
                        click: function () {
                            $(this).dialog("close");
                        }
                    },
                    {
                        text: "כן",
                        click: function () {
                            $(this).dialog("close");
                            $deletingDialog.dialog("open");
                            $.ajax({
                                url: '@Url.Action("Delete")',
                                type: "POST",
                                data: { Id: $(this).data('id') },
                                dataType: "json"
                            }).done(function (data) {
                                $deletingDialog.dialog("close");
                                oTable.fnDraw();
                                alert(data);
                            });
                        }
                    }
                ]
            });
            $deletingDialog = $('<div>אנא המתן בזמן שהמחיקה מתבצעת...<div>').dialog({
                autoOpen: false
            });
        });
    });

    function selectAll() {
        if ($("#mainSelector").prop('checked')) {
            $(".Selector").prop('checked', true);
        }
        else {
            $(".Selector").prop('checked', false);
        }
    }

    function confirmDelete(id) {
        $dialog.data('id', id).dialog("open");
    }
    </script>
}

